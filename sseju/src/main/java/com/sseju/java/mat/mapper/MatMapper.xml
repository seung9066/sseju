<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sseju.java.mat.mapper.MatMapper">
	<select id="material" resultType="MatVO">
		SELECT * 
		  FROM material
		order by mat_code  
	</select>
	<select id="prtOrdList" resultType="MatVO">
		select o.order_no, o.d_day
		  from orders o, 
		       order_inf inf
		 where o.order_no = inf.order_no
		   and inf.order_yn = 'Y'
	  group by o.order_no, o.d_day
	</select>
	<select id="infoModal" resultType="MatVO" parameterType="MatVO">
		SELECT odi.order_no,
			   pt.prt_code,
			   pt.prt_name,
			   odi.order_qty,
			   ods.d_day
		  FROM orders ods
		  JOIN order_inf odi
			ON ods.order_no = odi.order_no
		  JOIN product pt
			ON pt.prt_code= odi.prt_code
		 WHERE odi.order_no = #{orderNo}
	</select>
	
	<select id="matordList" resultType="MatVO">
		SELECT b.mat_ord_no, 
		       b.mat_ord_qty, 
		       m.mat_code,
				m.mat_name,
				TO_DATE(b.mat_ord_date,'rrrr/MM/dd') as MAT_ORD_DATE,
				c.cp_code, 
				c.cp_name, 
				b.mat_price,
				b.mat_ord_emp, 
				e.emp_name, 
				b.mat_ord_yn				
		FROM mat_buy b
		JOIN material m 
		  ON m.mat_code = b.mat_code
		JOIN company c 
		  ON c.cp_code =	m.cp_code
		JOIN employee e 
		  on e.emp_id = b.mat_ord_emp
		order by mat_ord_no DESC
	</select>
	
	
	<select id="detailMatbuyInfo" resultType="MatVO"
		parameterType="MatVO">
		SELECT b.mat_ord_no, b.mat_ord_qty, m.mat_code,
		m.mat_name,TO_DATE(b.mat_ord_date,'rrrr/MM/dd') as MAT_ORD_DATE,
		c.cp_code, c.cp_name, b.mat_price,
		b.mat_ord_emp, b.mat_ord_yn, e.emp_id
		FROM mat_buy b
		JOIN material m ON m.mat_code = b.mat_code
		JOIN company c ON c.cp_code =
		m.cp_code
		JOIN employee e on e.emp_name = b.mat_ord_emp
		<where>
			<if test='startDate != null and endDate != null'>
				TRUNC(OD_DATE) = #{startDate}
			</if>
			<if test="prdCd != null and !prdCd.equals('')">
				and b.mat_code = #{matCode}
			</if>
			<if test="actCd != null and !actCd.equals('')">
				and c.cp_code = #{cpCode}
			</if>
		</where>
		order by mat_ord_no DESC
	</select>
	<select id="matOrdModal" resultType="MatVO" parameterType="MatVO">
		select ord.order_no, bom.prt_code, pd.prt_name, bom.mat_code, 
                bom.capacity, m.mat_name, (i.order_qty * 110/100) as "mat_ord_qty", 
                m.mat_unit_prc, (i.order_qty * 110/100 * m.mat_unit_prc) as "mat_price",
                c.cp_code , c.cp_name
		from 
		    orders ord,
		    order_inf i,
		    product pd,
		    bom bom,
		    material m,
		    company c
		where i.order_no = ord.order_no
		and i.prt_code = pd.prt_code
		and pd.prt_code = bom.prt_code
		and bom.mat_code = m.mat_code
		and m.cp_code = c.cp_code
		and ord.order_no = #{orderNo}
	</select>
	<!-- <select id="selectMatbuyInfo" resultType="MatVO"> SELECT * FROM mat_buy 
		WHERE mat_ord_no = #{matOrdNo} </select> -->
	<insert id="insertMatbuy" parameterType="MatVO">
		<selectKey keyProperty="matOrdNo" resultType="String"
			order="BEFORE">
			SELECT 'MAT_ORD_'||LPAD(NVL(MAX(SUBSTR(mat_ord_no,
			-3)),0)+1,3,0) FROM
			mat_buy
		</selectKey>
		INSERT INTO mat_buy
		VALUES (
		#{matOrdNo}
		,#{matOrdQty}
		,'PRG_001'
		,#{matCode}
		,sysdate
		,#{cpCode}
		,'미확인'
		,#{matPrice}
		,#{matOrdEmp}
		)
	</insert>
	<update id="updateMatbuy" parameterType="MatVO">
		UPDATE mat_buy
		<set>
			<if test="matOrdQty != null and !matOrdQty.equals('')">
				MAT_ORD_QTY = #{matOrdQty},
			</if>
			<if
				test="nowCode != null and !nowCode.equals('') and matOrdYn == '미확인'">
				NOW_CODE = 'PRG_002',
			</if>
			<if test="matOrdDate != null and !matOrdDate.equals('')">
				MAT_ORD_DATE =#{matOrdDate},
			</if>
			<if test="cpCode != null and !cpCode.equals('')">
				CP_CODE = #{cpCode},
			</if>
			<if test="matOrdYn != null and !matOrdYn.equals('')">
				MAT_ORD_YN = #{matOrdYn},
			</if>
			<if test="matPrice != null and !matPrice.equals('')">
				MAT_PRICE = #{matPrice},
			</if>
			<if test="matOrdYn != null and !matOrdYn.equals('')">
				MAT_ORD_EMP = #{matOrdEmp}
			</if>
		</set>
		WHERE MAT_ORD_NO = #{matOrdNo}
	</update>
	<update id="updateordYn" parameterType="MatVO">
		UPDATE order_inf SET order_yn = 'O' WHERE order_no = #{orderNo}
	</update>
	<delete id="deleteMatbuy" parameterType="MatVO">
		DELETE FROM mat_buy
		WHERE MAT_ORD_NO = #{matOrdNo}
	</delete>
	<!-- <delete id="selectDeleteMatbuy" parameterType="list"> DELETE FROM mat_buy 
		WHERE MAT_ORD_NO in( <foreach collection="list" item="item" separator=","> 
		#{item} </foreach> ) </delete> -->

	<!-- 입고 Mapper -->
	<select id="matInList" resultType="MatVO">
		select l.lot_no, m.mat_code, m.mat_name , c.mat_pass_qty, l.lot_date,l.wh_code, w.wh_name
		from lot l,
		warehouse w,
		material m,
		mat_buy b,
		mat_chk c
		WHERE l.wh_code = w.wh_code
		and c.mat_code = l.mp_cdoe
		and c.mat_ord_no = b.mat_ord_no
		and b.mat_code = m.mat_code
<!-- 
		SELECT c.mat_ord_no,
		c.mat_chk_code, m.mat_code, m.mat_name, b.mat_ord_yn,
		b.mat_ord_qty, c.mat_pass_qty, TO_CHAR(l.lot_date, 'yyyy-MM-dd') as
		"lot_date",l.lot_no, w.wh_code, w.wh_name
		FROM mat_chk c
		JOIN mat_buy b ON c.mat_ord_no = b.mat_ord_no
		JOIN lot l ON l.mp_code = b.mat_code
		JOIN material m ON m.mat_code = l.mp_code
		JOIN warehouse w ON w.wh_code = l.wh_code
		WHERE mat_ord_yn = '입고' -->
	</select>
	<select id="matNotinList" resultType="MatVO">
<!-- 		SELECT o.mat_ord_no , m.mat_code, m.mat_name ,c.mat_in_qty, w.wh_name,
		c.mat_chk_date, o.mat_ord_yn,c.mat_chk_code
		FROM mat_chk c,
		mat_buy o,
		material m,
		warehouse w,
		lot l
		WHERE c.mat_ord_no = o.mat_ord_no
		and o.mat_code = m.mat_code
		and l.wh_code = w.wh_code
		and l.mp_code = c.mat_code
		and o.mat_ord_yn = '확인'
		order by o.mat_ord_no DESC -->		
		select b.mat_ord_no, b.mat_code, m.mat_name, c.mat_chk_code, c.mat_in_qty, b.mat_ord_yn
		from mat_buy b
		join mat_chk c on b.mat_ord_no = c.mat_ord_no
		join material m on m.mat_code = b.mat_code
		where b.mat_ord_yn = '확인'
		order by b.mat_ord_no DESC 
	</select>
	<update id="updateMoy" parameterType="MatVO">
		update mat_buy set mat_ord_yn = '입고' where mat_ord_no = #{matOrdNo}
	</update>
	<insert id="insertErr" parameterType="MatVO">
		<selectKey keyProperty="matNo" resultType="int"
			order="BEFORE">
			SELECT CASE
			WHEN MAX(mat_no) IS NULL THEN 1 ELSE
			MAX(mat_no) + 1 END AS NUM FROM
			mat_err
		</selectKey>
		insert into mat_err (mat_no,
							 mat_chk_code,
							 err_code)
    		         values ( #{matNo}
    		         		,#{matChkCode}
    		         		,(select err_code
                                 from error
                                where code = #{matCode}))
	</insert>
	
	<select id="selectMatIn" resultType="MatVO">
	</select>
	<select id="selectMatordno" resultType="MatVO">
		SELECT mat_ord_no FROM mat_chk where mat_ord_no = #{matOrdNo}
	</select>
	<insert id="insertMatord" parameterType="MatVO">
		<selectKey keyProperty="matChkCode" resultType="String"
			order="BEFORE">
			SELECT 'MAT_CK'||LPAD(NVL(MAX(SUBSTR(mat_chk_code,
			-3)),0)+1,3,0) FROM
			mat_chk
		</selectKey>
		INSERT INTO mat_chk
		(mat_chk_code
		,mat_in_qty
		,mat_chk_date
		,mat_ord_no,
		mat_code)
		VALUES
		(#{matChkCode}
		,#{matOrdQty}
		,sysdate
		,#{matOrdNo}
		,#{matCode})

	</insert>
	<insert id="insertMat" parameterType="MatVO">
	</insert>
	<update id="updateMatnotIn" parameterType="MatVO">
		UPDATE mat_chk
		<set>
			<if test="matInQty != null and !matInQty.equals('')">
				MAT_IN_QTY = #{matInQty},
			</if>
			<if test="matCode != null and !matCode.equals('')">
				MAT_CODE = #{matCode}
			</if>
		</set>
		WHERE MAT_ORD_NO = #{matOrdNo}
	</update>
	<update id="updateMat" parameterType="MatVO">
		UPDATE lot
		<set>
			<if test="whCode != null and !whCode.equals('')">
				wh_code = #{whCode}
			</if>
			WHERE lot_no = #{lotNo}
		</set>
	</update>
	<delete id="deleteMat" parameterType="MatVO">
		DELETE FROM MAT_CHK WHERE
		MAT_ORD_NO = #{matOrdNo}
	</delete>
	<!-- <delete id="selectDeleteMatIn" parameterType="list"> DELETE FROM mat_chk 
		WHERE MAT_ORD_NO in( <foreach collection="list" item="item" separator=","> 
		#{item} </foreach> ) </delete> -->

	<!-- LOT Mapper-->
	
	<insert id="insertLot" parameterType="MatVO">
		<selectKey keyProperty="lotNo" resultType="String"
				order="BEFORE">
			SELECT 'LOT_'||TO_CHAR(SYSDATE,'YYYYMMDD')||'_'||LPAD(NVL(MAX(SUBSTR(lot_no, -3)),0)+1,3,0) 
			FROM	lot
		</selectKey>
		INSERT INTO lot	(lot_no
						,lot_date
						,mp_code
						,lot_qty
						,wh_code
						,mat_chk_code)
				VALUES
						(#{lotNo}
						,#{matChkDate}
						,#{matCode}
						,#{lotQty}
						,#{whCode}
						,#{matChkCode})
	</insert>
	<update id="updateChk" parameterType="MatVO">
		UPDATE mat_chk
		<set>
			<if test="matErrQty != null and !matErrQty.equals('')">
				mat_err_qty = #{matErrQty},
			</if>
			<if test="matPassQty != null and !matPassQty.equals('')">
				mat_pass_qty = #{matPassQty}
			</if>
			where mat_ord_no = #{matOrdNo}
		</set>
	</update>

	<!--출고 Mapper -->
	<select id="matOutList" resultType="MatVO">
		SELECT o.mat_out_no , o.mat_out_date , 
		        o.mat_out_qty, o.mat_lot_no , 
		        l.mp_code, m.mat_name, l.wh_code ,
		                (select w.wh_name 
		                   from warehouse w 
		                  WHERE l.wh_code = w.wh_code) as "wh_name"
		FROM mat_out o,
		    lot l,
		    material m
		WHERE o.mat_lot_no = l.lot_no
		AND l.mp_code = m.mat_code
		order by mat_out_no
	</select>
	<select id="selectMatOut" resultType="MatVO">
	</select>
	<insert id="insertMatOut" parameterType="MatVO">
	</insert>
	<update id="updateMatOut" parameterType="MatVO">
	</update>
	<delete id="deleteMatOut" parameterType="MatVO">
	</delete>
	<delete id="selectDeleteMatOut" parameterType="list">
		DELETE FROM mat_chk WHERE MAT_ORD_NO in(
		<foreach collection="list" item="item" separator=",">
			#{item}
		</foreach>
		)
	</delete>
	
	

	<!--재고 Mapper -->
	<select id="matStockList" resultType="MatVO">
		SELECT l.lot_no, l.lot_date, l.mp_code, m.mat_name, l.lot_qty, l.wh_code, w.wh_name
		FROM material m,
		    lot l,
		    warehouse w
		WHERE m.mat_code = l.mp_code
		and l.wh_code = w.wh_code
		and l.lot_qty != 0
		ORDER BY lot_no
	</select>
	<select id="selectMatStock" resultType="MatVO">
	</select>
	<insert id="insertMatStock" parameterType="MatVO">
	</insert>
	<update id="updateMatStock" parameterType="MatVO">
	</update>
	<delete id="deleteMatStock" parameterType="MatVO">
	</delete>
	<delete id="selectDeleteMatStock" parameterType="list">
		DELETE FROM mat_stock WHERE
		<!-- LOT삭제? -->
	</delete>


	<!-- 검수내역 Mapper -->
	<select id="matCheckList" resultType="MatVO">
		SELECT c.mat_chk_code , c.mat_in_qty, c.mat_err_qty, 
		       c.mat_pass_qty , c.mat_chk_date , c.mat_ord_no,
		       me.err_code , me.mat_err_doc, er.err_name,
		       l.mp_code, m.mat_name
		  FROM mat_chk c,
		      mat_err me,
		      error er,
		      lot l,
		      material m
		WHERE m.mat_code = l.mp_code
		  AND l.mat_chk_code = c.mat_chk_code
		  AND c.mat_chk_code = me.mat_chk_code
		  AND me.err_code = er.err_code
     group by c.mat_chk_code , c.mat_in_qty, c.mat_err_qty, 
		       c.mat_pass_qty , c.mat_chk_date , c.mat_ord_no,
		       me.err_code, me.mat_err_doc, er.err_name,
		       l.mp_code, m.mat_name    
    ORDER BY mat_chk_code
	</select>
	<select id="selectMatCheck" resultType="MatVO">
	</select>
	<insert id="insertMatCheck" parameterType="MatVO">
	</insert>
	<update id="docUpdate" parameterType="MatVO">
		UPDATE mat_err 
		   SET mat_err_doc = #{matErrDoc}
		 WHERE mat_chk_code = #{matChkCode}
	</update>
	<delete id="deleteMatCheck" parameterType="MatVO">
	</delete>
	<delete id="selectDeleteMatCheck" parameterType="list">
		<!-- 검수 삭제 -->
	</delete>
</mapper>